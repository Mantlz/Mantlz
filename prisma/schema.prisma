generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  clerkId    String   @unique
  email      String   @unique
  firstName  String?
  lastName   String?
  imageUrl   String?
  quotaLimit Int
  plan       Plan     @default(FREE)
  resendApiKey String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  forms      Form[]
  quota      Quota[]
  apiKeys    ApiKey[]

  @@index([clerkId])
}

model Quota {
  id        String   @id @default(cuid())
  userId    String
  year      Int
  month     Int
  count     Int      @default(0)
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Form {
  id          String       @id @default(cuid())
  name        String
  description String?
  schema      String
  userId      String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation(fields: [userId], references: [id])
  submissions Submission[]
  emailSettings EmailSettings?
}

model EmailSettings {
  id          String   @id @default(cuid())
  formId      String   @unique
  form        Form     @relation(fields: [formId], references: [id])
  enabled     Boolean  @default(false)
  fromEmail   String?
  subject     String?
  template    String?
  replyTo     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Submission {
  id        String   @id @default(cuid())
  data      Json
  formId    String
  email     String?
  createdAt DateTime @default(now())
  form      Form     @relation(fields: [formId], references: [id])

  @@unique([formId, email])
  @@index([email])
}

model ApiKey {
  id          String   @id @default(cuid())
  key         String   @unique
  name        String
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  lastUsedAt  DateTime @updatedAt
  isActive    Boolean  @default(true)

  @@index([key])
}

enum Plan {
  FREE
  STANDARD
  PRO
}
